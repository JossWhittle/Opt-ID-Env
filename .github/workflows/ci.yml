# Copyright 2017 Diamond Light Source
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific
# language governing permissions and limitations under the License.


name: CI - Build Docker Image and Execute Tests

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]

  workflow_dispatch:

jobs:
  build:
    name: Build Docker image, execute tests, and push to Dockerhub
    runs-on: ubuntu-20.04

    steps:

      # Configure environment variable depending on which branch we are running on
      - name: Set env to master
        if: endsWith(github.ref, '/master')
        run: echo "DOCKER_REPO=opt-id:env-v3" >> $GITHUB_ENV
      - name: Set env to development
        if: endsWith(github.ref, '/development')
        run: echo "DOCKER_REPO=opt-id:env-v3-dev" >> $GITHUB_ENV

      # Checks-out Kompressor repository under $(pwd)
      - uses: actions/checkout@v2

      # Build Docker image and execute tests, push image to Dockerhub on success
      - name: Pull existing Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO || true

      - name: Build Docker image
        run: docker build --pull --cache-from ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO --tag ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO .

      - name: Start container
        run: docker run -itd --name env -v $(pwd):/tmp/repo/ -w /tmp/repo/ ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO

      - name: Execute tests within container
        run: |
          docker exec env python -m pytest tests/ 2>&1 | tee pytest-results.txt

      - name: Save test results as artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results
          path: pytest-results.txt

      - name: Halt container
        run: docker stop env

      - name: Push Docker image to Dockerhub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO
